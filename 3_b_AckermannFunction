(*       Ackermann function is another special recursive function that takes
         the two numbers a and b to apply different rules based on its values.

         It returns b + 1, if a equals 0.

         If a greater than 0 but b = 0, then it makes a call with a - 1 and 1.

         If both a and b are greater than 0, the function calls itself twice:
         first with a and b - 1, then using that result in another recursive call.
         It grows extremely fast and takes extremely large values for inputs whose
         value is relatively small. It is one of those applications that show deep
         recursion; it calls itself many times before achieving a solution.
*)

let rec ack a b =
  if a = 0 then b + 1
  else if b = 0 then ack (a-1) 1
  else ack (a-1) (ack a (b-1))
;;
  
let result = ack 3 4;;

print_int result;;
